name: DMV Availability Notifier

on:
  push:
    branches: [master]  # or your branch
  schedule:
    - cron: "*/5 * * * *"
  workflow_dispatch: {}

concurrency:
  group: dmv-availability
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  check-and-notify:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Ensure jq is installed
        run: echo "jq no longer required"

      - name: Check DMV availability
        id: check
        env:
          BEARER_TOKEN: ${{ secrets.BEARER_TOKEN }}
          # Comma or space separated list, e.g. "33,19,29"
          LOCATION_IDS: ${{ vars.LOCATION_IDS }}
          TYPE_ID: ${{ vars.TYPE_ID || '204' }}
          BASE_URL: ${{ vars.BASE_URL || 'https://publicwebsiteapi.nydmvreservation.com/api/AvailableLocationDates' }}
          START_DATE: ${{ vars.START_DATE || '' }}
          TIME_FROM: ${{ vars.TIME_FROM || '' }}
          TIME_TO: ${{ vars.TIME_TO || '' }}
          DATE_WINDOW_DAYS: ${{ vars.DATE_WINDOW_DAYS || '60' }}
          WEEKDAYS: ${{ vars.WEEKDAYS || '' }}
          WEEK_OFFSET: ${{ vars.WEEK_OFFSET || '' }}
          TARGET_WEEKDAY: ${{ vars.TARGET_WEEKDAY || '' }}
        run: |
          python3 scripts/check_availability.py
          echo "found=$(cat .availability/found)" >> "$GITHUB_OUTPUT"
          {
            echo "summary<<EOF"
            cat .availability/summary.txt
            echo "EOF"
          } >> "$GITHUB_OUTPUT"

      - name: Send Discord webhook
        if: steps.check.outputs.found == 'true'
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          if [ -z "${DISCORD_WEBHOOK_URL}" ]; then
            echo "DISCORD_WEBHOOK_URL not set; skipping"
            exit 0
          fi
          # Discord limit is 2000 characters; trim to be safe
          msg=$(cat .availability/summary.txt | head -c 1900)
          jq -Rn --arg content "$msg" '{content: $content}' > payload.json
          echo "Posting to Discord webhook..."
          http_code=$(curl -sS -D headers.txt -o body.txt -w "%{http_code}" \
            -H "Content-Type: application/json" -d @payload.json "$DISCORD_WEBHOOK_URL")
          echo "--- Response status: ${http_code}"
          echo "--- Response headers:"
          cat headers.txt || true
          echo "--- Response body:"
          cat body.txt || true

      # Email notification removed per request; webhook notification remains in the script


